name: Backend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'functions/**'
      - 'firebase.json'
      - 'firestore.rules'
      - 'firestore.indexes.json'
      - '.github/workflows/backend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'functions/**'
      - 'firebase.json'
      - 'firestore.rules'
      - 'firestore.indexes.json'

env:
  NODE_VERSION: '22'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: functions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint 2>/dev/null || echo "No lint script found"

      - name: Run tests
        run: npm test 2>/dev/null || echo "No tests found"

      - name: Build functions
        run: npm run build 2>/dev/null || echo "No build script found"

  security-scan:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install audit tools
        run: npm install -g audit-ci

      - name: Audit backend dependencies
        working-directory: functions
        run: audit-ci --config audit-ci.json 2>/dev/null || npm audit --audit-level moderate

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install functions dependencies
        working-directory: functions
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Firebase (Staging)
        run: |
          firebase use expense-wallet-82d9f
          firebase deploy --only functions,firestore --project expense-wallet-82d9f

  deploy-production:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    defaults:
      run:
        working-directory: .

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: functions/package-lock.json

      - name: Install functions dependencies
        working-directory: functions
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Firebase (Production)
        run: |
          firebase use expense-wallet-82d9f
          firebase deploy --only functions,firestore --project expense-wallet-82d9f

      - name: Create deployment notification
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Backend successfully deployed to production!\n\n' +
                    'üìä **Deployment Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n' +
                    '- **Environment:** Production\n\n' +
                    'üîß **Services Deployed:** Functions, Firestore'
            })

  rollback:
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Attempt Firestore rollback
        working-directory: .
        run: |
          firebase use expense-wallet-82d9f
          echo "üîÑ Attempting to rollback Firestore rules/indexes..."
          # Note: Firebase doesn't support direct rollback of Functions or Firestore
          # This is mainly for notification purposes
          echo "‚ö†Ô∏è Firebase Functions and Firestore do not support automatic rollback"
          echo "Manual intervention required for Functions redeployment"

      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Backend Deployment Failed - Manual Recovery Required**\n\n' +
                    'üîÑ **Rollback Status:**\n' +
                    '- Firebase Functions: No automatic rollback available\n' +
                    '- Firestore Rules/Indexes: No automatic rollback available\n\n' +
                    'üìã **Failure Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n\n' +
                    'üîß **Recovery Steps:**\n' +
                    '1. Check workflow logs for detailed error information\n' +
                    '2. Fix the issues in the functions/ directory\n' +
                    '3. Push fixes to trigger new deployment\n' +
                    '4. If needed, manually redeploy from a previous working commit'
            })

  rollback-staging:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: failure() && github.ref == 'refs/heads/develop'

    steps:
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate to Firebase
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Attempt Firestore rollback (Staging)
        working-directory: .
        run: |
          firebase use expense-wallet-82d9f
          echo "üîÑ Attempting to rollback Firestore rules/indexes (Staging)..."
          # Note: Firebase doesn't support direct rollback of Functions or Firestore
          # This is mainly for notification purposes
          echo "‚ö†Ô∏è Firebase Functions and Firestore do not support automatic rollback"
          echo "Manual intervention required for Functions redeployment"

      - name: Notify staging rollback
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Backend Staging Deployment Failed - Manual Recovery Required**\n\n' +
                    'üîÑ **Rollback Status:**\n' +
                    '- Firebase Functions: No automatic rollback available\n' +
                    '- Firestore Rules/Indexes: No automatic rollback available\n\n' +
                    'üìã **Failure Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** develop\n' +
                    '- **Triggered by:** ${{ github.actor }}\n\n' +
                    'üîß **Recovery Steps:**\n' +
                    '1. Check workflow logs for detailed error information\n' +
                    '2. Fix the issues in the develop branch\n' +
                    '3. Push fixes to trigger a new deployment'
            })