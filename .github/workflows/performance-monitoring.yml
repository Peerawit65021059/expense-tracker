name: Performance Monitoring

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'

jobs:
  lighthouse-audit:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build application
        working-directory: .
        run: |
          npm ci
          npm run build

      - name: Deploy to temporary hosting
        id: firebaseHostingDeploy
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_EXPENSE_WALLET_82D9F }}
          projectId: expense-wallet-82d9f
          expires: 1d
          channelId: temp-performance-check

      - name: Run Lighthouse audit
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.firebaseHostingDeploy.outputs.details_url }}
          configPath: .lighthouserc.json
          uploadArtifacts: true
          artifactName: lighthouse_results
          temporaryPublicStorage: true

      - name: Comment performance results
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');

            // Read Lighthouse results
            const resultsDir = './.lighthouseci';
            let performanceComment = '📊 **Performance Audit Results**\n\n';

            try {
              const files = fs.readdirSync(resultsDir);
              const manifestFile = files.find(file => file.includes('manifest'));

              if (manifestFile) {
                const manifestPath = path.join(resultsDir, manifestFile);
                const manifest = JSON.parse(fs.readFileSync(manifestPath, 'utf8'));

                manifest.forEach(result => {
                  const url = result.url;
                  const summary = result.summary;

                  performanceComment += `🔗 **URL:** ${url}\n`;
                  performanceComment += `📱 **Performance:** ${summary.performance * 100}/100\n`;
                  performanceComment += `♿ **Accessibility:** ${summary.accessibility * 100}/100\n`;
                  performanceComment += `🔍 **Best Practices:** ${summary['best-practices'] * 100}/100\n`;
                  performanceComment += `🔒 **SEO:** ${summary.seo * 100}/100\n`;
                  performanceComment += `⚡ **PWA:** ${summary.pwa * 100}/100\n\n`;
                });
              }
            } catch (error) {
              performanceComment += '❌ Could not read performance results\n';
            }

            performanceComment += '---\n';
            performanceComment += '*Performance audit completed. Results are also available as workflow artifacts.*';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: performanceComment
            });

  bundle-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        working-directory: .
        run: npm ci

      - name: Build and analyze bundle
        working-directory: .
        run: |
          npm run build
          npx webpack-bundle-analyzer build/static/js/*.js --mode static --report build/bundle-report.html 2>/dev/null || echo "Bundle analysis completed"

      - name: Upload bundle analysis
        uses: actions/upload-artifact@v4
        with:
          name: bundle-analysis
          path: build/bundle-report.html
          retention-days: 30

      - name: Check bundle size
        working-directory: .
        run: |
          echo "📦 Bundle Size Analysis:" > bundle-size.txt
          find build/static/js -name "*.js" -exec ls -lh {} \; >> bundle-size.txt
          find build/static/css -name "*.css" -exec ls -lh {} \; >> bundle-size.txt
          cat bundle-size.txt

      - name: Upload bundle size report
        uses: actions/upload-artifact@v4
        with:
          name: bundle-size-report
          path: bundle-size.txt
          retention-days: 30