name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '22'

jobs:
  # Frontend Testing and Building
  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: expense-tracker

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint 2>/dev/null || echo "No lint script found"

      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Build application
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: expense-tracker/build/
          retention-days: 7

  # Backend Testing and Building
  backend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: functions

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint 2>/dev/null || echo "No lint script found"

      - name: Run tests
        run: npm test 2>/dev/null || echo "No tests found"

      - name: Build functions
        run: npm run build 2>/dev/null || echo "No build script found"

  # Security Scan
  security-scan:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install audit tools
        run: npm install -g audit-ci

      - name: Audit frontend dependencies
        working-directory: expense-tracker
        run: audit-ci --config audit-ci.json 2>/dev/null || npm audit --audit-level moderate

      - name: Audit backend dependencies
        working-directory: functions
        run: audit-ci --config audit-ci.json 2>/dev/null || npm audit --audit-level moderate

  # Deploy to Staging
  deploy-staging:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test, security-scan]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase (Staging)
        run: |
          firebase deploy --only hosting,functions --project expense-wallet-82d9f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  # Deploy to Production
  deploy-production:
    runs-on: ubuntu-latest
    needs: [frontend-test, backend-test, security-scan]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Build frontend for production
        working-directory: expense-tracker
        run: |
          npm ci
          npm run build

      - name: Deploy to Firebase (Production)
        run: |
          firebase deploy --only hosting,functions --project expense-wallet-82d9f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Create deployment notification
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Successfully deployed to production!\n\n' +
                    'üìä **Deployment Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n' +
                    '- **Environment:** Production\n\n' +
                    'üîó **Live URL:** https://expense-wallet-82d9f.web.app'
            })

  # Rollback on failure
  rollback:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Rollback deployment
        run: |
          # Rollback to previous version if available
          firebase hosting:rollback --project expense-wallet-82d9f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Deployment Failed - Rollback Initiated**\n\n' +
                    'üîÑ The system has been rolled back to the previous stable version.\n\n' +
                    'üìã **Failure Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n\n' +
                    'üîç Please check the workflow logs for detailed error information.'
            })