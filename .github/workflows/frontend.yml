name: Frontend CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package*.json'
      - '.github/workflows/frontend.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'public/**'
      - 'package*.json'

env:
  NODE_VERSION: '20'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint 2>/dev/null || echo "No lint script found"

      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          CI: true

      - name: Build application
        run: npm run build
        env:
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}
          REACT_APP_FIREBASE_PROJECT_ID: ${{ secrets.REACT_APP_FIREBASE_PROJECT_ID }}
          REACT_APP_FIREBASE_STORAGE_BUCKET: ${{ secrets.REACT_APP_FIREBASE_STORAGE_BUCKET }}
          REACT_APP_FIREBASE_MESSAGING_SENDER_ID: ${{ secrets.REACT_APP_FIREBASE_MESSAGING_SENDER_ID }}
          REACT_APP_FIREBASE_APP_ID: ${{ secrets.REACT_APP_FIREBASE_APP_ID }}
          REACT_APP_FIREBASE_MEASUREMENT_ID: ${{ secrets.REACT_APP_FIREBASE_MEASUREMENT_ID }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: build/
          retention-days: 7

  deploy-staging:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: build/

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting (Staging)
        run: |
          firebase use expense-wallet-82d9f
          firebase deploy --only hosting --project expense-wallet-82d9f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  deploy-production:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: build/

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Deploy to Firebase Hosting (Production)
        run: |
          firebase use expense-wallet-82d9f
          firebase deploy --only hosting --project expense-wallet-82d9f
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Create deployment notification
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Frontend successfully deployed to production!\n\n' +
                    'üìä **Deployment Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n' +
                    '- **Environment:** Production\n\n' +
                    'üîó **Live URL:** https://expense-wallet-82d9f.web.app'
            })

  rollback:
    runs-on: ubuntu-latest
    needs: deploy-production
    if: failure() && github.ref == 'refs/heads/main'

    steps:
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Rollback Firebase Hosting
        run: |
          firebase use expense-wallet-82d9f
          echo "üîÑ Attempting to rollback Firebase Hosting to previous version..."
          firebase hosting:rollback --project expense-wallet-82d9f || echo "‚ö†Ô∏è Hosting rollback failed or not available"
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

      - name: Notify rollback
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '‚ö†Ô∏è **Frontend Deployment Failed - Hosting Rollback Completed**\n\n' +
                    'üîÑ **What was rolled back:**\n' +
                    '- Firebase Hosting (if previous version available)\n\n' +
                    'üìã **Failure Details:**\n' +
                    '- **Commit:** ${{ github.sha }}\n' +
                    '- **Branch:** ${{ github.ref_name }}\n' +
                    '- **Triggered by:** ${{ github.actor }}\n\n' +
                    'üîß **Next Steps:**\n' +
                    '1. Check workflow logs for detailed error information\n' +
                    '2. Fix the issues in the frontend code\n' +
                    '3. Push the fixes to trigger a new deployment'
            })